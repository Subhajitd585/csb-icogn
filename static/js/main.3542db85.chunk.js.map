{"version":3,"sources":["autosearch.js","App.js","index.js"],"names":["AutoSearch","useState","searchOption","searchOptionHolder","searchVal","searchValHandler","suggestions","setSuggestionsHandler","Fragment","className","type","name","value","onChange","e","fetch","then","response","json","Options","length","filter","opt","RegExp","country","match","findOptionHandler","target","placeholder","map","i","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+LAEe,SAASA,IACtB,MAA2CC,mBAAS,IAApD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,qBAAtC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA6CJ,mBAAS,IAAtD,mBAAOK,EAAP,KAAoBC,EAApB,KAsBA,OACE,cAAC,IAAMC,SAAP,UACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,SACE,kDAEF,sBAAKA,UAAU,YAAf,UACE,uBACEC,KAAK,OACLD,UAAU,2BACVE,KAAK,eACLC,MAAOR,EACPS,SAAU,SAACC,GAAD,OAhCM,SAACV,GACzBW,MACE,iGAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLd,EAAmBc,MAEvB,IAAIE,EAAU,GACVf,EAAUgB,OAAS,IACrBD,EAAUjB,EAAamB,QAAO,SAACC,GAC7B,IAAMV,EAAQ,IAAIW,OAAJ,UAAcnB,GAAa,MACzC,OAAOkB,EAAIE,QAAQC,MAAMb,OAK7BL,EAAsBY,GACtBd,EAAiBD,GAcQsB,CAAkBZ,EAAEa,OAAOf,QAC5CgB,YAAY,mBAEd,qBAAKnB,UAAU,gBAAf,SACGH,EAAYuB,KAAI,SAACP,EAAKQ,GAAN,OACf,4BAAYR,EAAIE,SAARM,gBCzCP,SAASC,IACtB,OACE,qBAAKtB,UAAU,MAAf,SACE,cAACT,EAAD,MCDN,IAAMgC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACL,EAAD,MAEFC,I","file":"static/js/main.3542db85.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function AutoSearch() {\r\n  const [searchOption, searchOptionHolder] = useState([]);\r\n  const [searchVal, searchValHandler] = useState();\r\n  const [suggestions, setSuggestionsHandler] = useState([]);\r\n\r\n  const findOptionHandler = (searchVal) => {\r\n    fetch(\r\n      \"https://raw.githubusercontent.com/samayo/country-json/master/src/country-by-abbreviation.json\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        searchOptionHolder(response);\r\n      });\r\n    let Options = [];\r\n    if (searchVal.length > 0) {\r\n      Options = searchOption.filter((opt) => {\r\n        const value = new RegExp(`${searchVal}`, \"gi\");\r\n        return opt.country.match(value);\r\n      });\r\n      // alert(\"hello\");\r\n    }\r\n    //console.log(\"options\", Options);\r\n    setSuggestionsHandler(Options);\r\n    searchValHandler(searchVal);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"searchHolder\">\r\n        <div className=\"formLabel\">\r\n          <h4>Search Country</h4>\r\n        </div>\r\n        <div className=\"formGroup\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"formControl searchOption\"\r\n            name=\"searchOption\"\r\n            value={searchVal}\r\n            onChange={(e) => findOptionHandler(e.target.value)}\r\n            placeholder=\"Search Here...\"\r\n          />\r\n          <div className=\"SearchOptions\">\r\n            {suggestions.map((opt, i) => (\r\n              <p key={i}>{opt.country}</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport AutoSearch from \"./autosearch\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <AutoSearch />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}